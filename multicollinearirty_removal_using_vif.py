# -*- coding: utf-8 -*-
"""MultiCollinearirty Removal Using VIF.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aytckvCuQRwTXBQklPCiTM2Jp86sXyjN
"""
import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import sklearn.datasets
from sklearn.model_selection import train_test_split
col1, col2= st.beta_columns(2)
with col1:    
    st.write("**Profile :** https://tb5304.github.io")
with col2:   
    st.write("**Blog :** https://tb5304.github.io/") 
# Text/Title
st.title("Logistic Regression - Mnist Dataset")        }

# Read the data
import pandas as pd
data = pd.read_csv("Housing_Modified_prepared.csv")

# Select independent and dependent variables
Y = data["price"]
indep_vars = data.columns
indep_vars = indep_vars.delete(0)
X = data[indep_vars]

# Fit the ordinary least squared regression model
import statsmodels.api as sm
model = sm.OLS(Y, X)

# Train the model
model = model.fit()

# Check the model summary
model.summary()

# Calculate variance inflation factor
from statsmodels.stats.outliers_influence import variance_inflation_factor as vif
help(vif)

vif(data[indep_vars].values, 0)

for i in range(len(indep_vars)):
    vif_ls = [vif(data[indep_vars].values, index) for index in range(len(indep_vars))]
    mvif = max(vif_ls) # Max vif
    print("Max vif value is:", mvif)
    drop_index = vif_ls.index(mvif)
    if mvif > 10: # 10 because a lot of important influencing factors were getting removed
        print("deleting: ", indep_vars[drop_index])
        indep_vars = indep_vars.delete(drop_index)

print("Final Independent variables: ", indep_vars)

Y = data["price"]
X = data[indep_vars]
model = sm.OLS(Y,X)
model = model.fit()

model.summary()

user_input = {}
for var in indep_vars:
    temp = input("Enter "+ var +": ")
    user_input[var] = temp
user_df = pd.DataFrame(data = user_input, index = [0], columns = indep_vars)
import sklearn.linear_model as lm
lr = lm.LinearRegression()
lr.fit(X, Y)
price = lr.predict(user_df)
print("Price of House is USD ", int(price[0]))

